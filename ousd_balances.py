""" This script takes a list of unique addresses to stdin (one address per line)
and gets the account's balances at the time of the given block.  If given a
specific credits per token value (CPT), the OUSD value will be price adjusted
accordingly.  Output is CSV.
"""
import sys
import json
from math import floor
from decimal import Decimal
from pathlib import Path
from argparse import ArgumentParser
from web3 import Web3

ME = Path(__file__).resolve()
ZERO_ADDRESS = "0x0000000000000000000000000000000000000000"
ERC20_ADDRESS = "0x2A8e1E676Ec238d8A992307B495b45B3fEAa5e86"
ERC20_DEF = { "contractName": "IERC20", "abi": [ { "anonymous": False, "inputs": [ { "indexed": True, "internalType": "address", "name": "from", "type": "address" }, { "indexed": True, "internalType": "address", "name": "to", "type": "address" }, { "indexed": False, "internalType": "uint256", "name": "value", "type": "uint256" } ], "name": "Transfer", "type": "event" }, { "anonymous": False, "inputs": [ { "indexed": True, "internalType": "address", "name": "owner", "type": "address" }, { "indexed": True, "internalType": "address", "name": "spender", "type": "address" }, { "indexed": False, "internalType": "uint256", "name": "value", "type": "uint256" } ], "name": "Approval", "type": "event" }, { "constant": True, "inputs": [], "name": "totalSupply", "outputs": [ { "internalType": "uint256", "name": "", "type": "uint256" } ], "payable": False, "stateMutability": "view", "type": "function" }, { "constant": True, "inputs": [ { "internalType": "address", "name": "account", "type": "address" } ], "name": "balanceOf", "outputs": [ { "internalType": "uint256", "name": "", "type": "uint256" } ], "payable": False, "stateMutability": "view", "type": "function" }, { "constant": False, "inputs": [ { "internalType": "address", "name": "recipient", "type": "address" }, { "internalType": "uint256", "name": "amount", "type": "uint256" } ], "name": "transfer", "outputs": [ { "internalType": "bool", "name": "", "type": "bool" } ], "payable": False, "stateMutability": "nonpayable", "type": "function" }, { "constant": True, "inputs": [ { "internalType": "address", "name": "owner", "type": "address" }, { "internalType": "address", "name": "spender", "type": "address" } ], "name": "allowance", "outputs": [ { "internalType": "uint256", "name": "", "type": "uint256" } ], "payable": False, "stateMutability": "view", "type": "function" }, { "constant": False, "inputs": [ { "internalType": "address", "name": "spender", "type": "address" }, { "internalType": "uint256", "name": "amount", "type": "uint256" } ], "name": "approve", "outputs": [ { "internalType": "bool", "name": "", "type": "bool" } ], "payable": False, "stateMutability": "nonpayable", "type": "function" }, { "constant": False, "inputs": [ { "internalType": "address", "name": "sender", "type": "address" }, { "internalType": "address", "name": "recipient", "type": "address" }, { "internalType": "uint256", "name": "amount", "type": "uint256" } ], "name": "transferFrom", "outputs": [ { "internalType": "bool", "name": "", "type": "bool" } ], "payable": False, "stateMutability": "nonpayable", "type": "function" } ], "metadata": "{\"compiler\":{\"version\":\"0.5.11+commit.c082d0b4\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":False,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":False,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":True,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":False,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":False,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":False,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":True,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":False,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":False,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":False,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":True,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":False,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":False,\"inputs\":[{\"indexed\":True,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":True,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":False,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":False,\"inputs\":[{\"indexed\":True,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":True,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":False,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP. Does not include the optional functions; to access them see {ERC20Detailed}.\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. * This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. * Returns a boolean value indicating whether the operation succeeded. * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 * Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. * Returns a boolean value indicating whether the operation succeeded. * Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. * Returns a boolean value indicating whether the operation succeeded. * Emits a {Transfer} event.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":False,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzz-raw://59fd025151435da35faa8093a5c7a17de02de9d08ad27275c5cdf05050820d91\",\"dweb:/ipfs/QmQMvwEcPhoRXzbXyrdoeRtvLoifUW9Qh7Luho7bmUPRkc\"]}},\"version\":1}", "bytecode": "0x", "deployedBytecode": "0x", "sourceMap": "", "deployedSourceMap": "", "source": "pragma solidity ^0.5.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP. Does not include\n * the optional functions; to access them see {ERC20Detailed}.\n */\ninterface IERC20 {\n /**\n * @dev Returns the amount of tokens in existence.\n */\n function totalSupply() external view returns (uint256);\n\n /**\n * @dev Returns the amount of tokens owned by `account`.\n */\n function balanceOf(address account) external view returns (uint256);\n\n /**\n * @dev Moves `amount` tokens from the caller's account to `recipient`.\n *\n * Returns a boolean value indicating whether the operation succeeded.\n *\n * Emits a {Transfer} event.\n */\n function transfer(address recipient, uint256 amount) external returns (bool);\n\n /**\n * @dev Returns the remaining number of tokens that `spender` will be\n * allowed to spend on behalf of `owner` through {transferFrom}. This is\n * zero by default.\n *\n * This value changes when {approve} or {transferFrom} are called.\n */\n function allowance(address owner, address spender) external view returns (uint256);\n\n /**\n * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n *\n * Returns a boolean value indicating whether the operation succeeded.\n *\n * IMPORTANT: Beware that changing an allowance with this method brings the risk\n * that someone may use both the old and the new allowance by unfortunate\n * transaction ordering. One possible solution to mitigate this race\n * condition is to first reduce the spender's allowance to 0 and set the\n * desired value afterwards:\n * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n *\n * Emits an {Approval} event.\n */\n function approve(address spender, uint256 amount) external returns (bool);\n\n /**\n * @dev Moves `amount` tokens from `sender` to `recipient` using the\n * allowance mechanism. `amount` is then deducted from the caller's\n * allowance.\n *\n * Returns a boolean value indicating whether the operation succeeded.\n *\n * Emits a {Transfer} event.\n */\n function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n /**\n * @dev Emitted when `value` tokens are moved from one account (`from`) to\n * another (`to`).\n *\n * Note that `value` may be zero.\n */\n event Transfer(address indexed from, address indexed to, uint256 value);\n\n /**\n * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n * a call to {approve}. `value` is the new allowance.\n */\n event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n", "sourcePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol", "ast": { "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol", "exportedSymbols": { "IERC20": [ 8369 ] }, "id": 8370, "nodeType": "SourceUnit", "nodes": [ { "id": 8302, "literals": [ "solidity", "^", "0.5", ".0" ], "nodeType": "PragmaDirective", "src": "0:23:43" }, { "baseContracts": [], "contractDependencies": [], "contractKind": "interface", "documentation": "@dev Interface of the ERC20 standard as defined in the EIP. Does not include\nthe optional functions; to access them see {ERC20Detailed}.", "fullyImplemented": False, "id": 8369, "linearizedBaseContracts": [ 8369 ], "name": "IERC20", "nodeType": "ContractDefinition", "nodes": [ { "body": None, "documentation": "@dev Returns the amount of tokens in existence.", "id": 8307, "implemented": False, "kind": "function", "modifiers": [], "name": "totalSupply", "nodeType": "FunctionDefinition", "parameters": { "id": 8303, "nodeType": "ParameterList", "parameters": [], "src": "290:2:43" }, "returnParameters": { "id": 8306, "nodeType": "ParameterList", "parameters": [ {  "constant": False,  "id": 8305,  "name": "",  "nodeType": "VariableDeclaration",  "scope": 8307,  "src": "316:7:43",  "stateVariable": False,  "storageLocation": "default",  "typeDescriptions": {  "typeIdentifier": "t_uint256",  "typeString": "uint256"  },  "typeName": {  "id": 8304,  "name": "uint256",  "nodeType": "ElementaryTypeName",  "src": "316:7:43",  "typeDescriptions": {  "typeIdentifier": "t_uint256",  "typeString": "uint256"  }  },  "value": None,  "visibility": "internal" } ], "src": "315:9:43" }, "scope": 8369, "src": "270:55:43", "stateMutability": "view", "superFunction": None, "visibility": "external" }, { "body": None, "documentation": "@dev Returns the amount of tokens owned by `account`.", "id": 8314, "implemented": False, "kind": "function", "modifiers": [], "name": "balanceOf", "nodeType": "FunctionDefinition", "parameters": { "id": 8310, "nodeType": "ParameterList", "parameters": [ {  "constant": False,  "id": 8309,  "name": "account",  "nodeType": "VariableDeclaration",  "scope": 8314,  "src": "427:15:43",  "stateVariable": False,  "storageLocation": "default",  "typeDescriptions": {  "typeIdentifier": "t_address",  "typeString": "address"  },  "typeName": {  "id": 8308,  "name": "address",  "nodeType": "ElementaryTypeName",  "src": "427:7:43",  "stateMutability": "nonpayable",  "typeDescriptions": {  "typeIdentifier": "t_address",  "typeString": "address"  }  },  "value": None,  "visibility": "internal" } ], "src": "426:17:43" }, "returnParameters": { "id": 8313, "nodeType": "ParameterList", "parameters": [ {  "constant": False,  "id": 8312,  "name": "",  "nodeType": "VariableDeclaration",  "scope": 8314,  "src": "467:7:43",  "stateVariable": False,  "storageLocation": "default",  "typeDescriptions": {  "typeIdentifier": "t_uint256",  "typeString": "uint256"  },  "typeName": {  "id": 8311,  "name": "uint256",  "nodeType": "ElementaryTypeName",  "src": "467:7:43",  "typeDescriptions": {  "typeIdentifier": "t_uint256",  "typeString": "uint256"  }  },  "value": None,  "visibility": "internal" } ], "src": "466:9:43" }, "scope": 8369, "src": "408:68:43", "stateMutability": "view", "superFunction": 3659, "visibility": "external" }, { "body": None, "documentation": "@dev Moves `amount` tokens from the caller's account to `recipient`.\n * Returns a boolean value indicating whether the operation succeeded.\n * Emits a {Transfer} event.", "id": 8323, "implemented": False, "kind": "function", "modifiers": [], "name": "transfer", "nodeType": "FunctionDefinition", "parameters": { "id": 8319, "nodeType": "ParameterList", "parameters": [ {  "constant": False,  "id": 8316,  "name": "recipient",  "nodeType": "VariableDeclaration",  "scope": 8323,  "src": "714:17:43",  "stateVariable": False,  "storageLocation": "default",  "typeDescriptions": {  "typeIdentifier": "t_address",  "typeString": "address"  },  "typeName": {  "id": 8315,  "name": "address",  "nodeType": "ElementaryTypeName",  "src": "714:7:43",  "stateMutability": "nonpayable",  "typeDescriptions": {  "typeIdentifier": "t_address",  "typeString": "address"  }  },  "value": None,  "visibility": "internal" }, {  "constant": False,  "id": 8318,  "name": "amount",  "nodeType": "VariableDeclaration",  "scope": 8323,  "src": "733:14:43",  "stateVariable": False,  "storageLocation": "default",  "typeDescriptions": {  "typeIdentifier": "t_uint256",  "typeString": "uint256"  },  "typeName": {  "id": 8317,  "name": "uint256",  "nodeType": "ElementaryTypeName",  "src": "733:7:43",  "typeDescriptions": {  "typeIdentifier": "t_uint256",  "typeString": "uint256"  }  },  "value": None,  "visibility": "internal" } ], "src": "713:35:43" }, "returnParameters": { "id": 8322, "nodeType": "ParameterList", "parameters": [ {  "constant": False,  "id": 8321,  "name": "",  "nodeType": "VariableDeclaration",  "scope": 8323,  "src": "767:4:43",  "stateVariable": False,  "storageLocation": "default",  "typeDescriptions": {  "typeIdentifier": "t_bool",  "typeString": "bool"  },  "typeName": {  "id": 8320,  "name": "bool",  "nodeType": "ElementaryTypeName",  "src": "767:4:43",  "typeDescriptions": {  "typeIdentifier": "t_bool",  "typeString": "bool"  }  },  "value": None,  "visibility": "internal" } ], "src": "766:6:43" }, "scope": 8369, "src": "696:77:43", "stateMutability": "nonpayable", "superFunction": None, "visibility": "external" }, { "body": None, "documentation": "@dev Returns the remaining number of tokens that `spender` will be\nallowed to spend on behalf of `owner` through {transferFrom}. This is\nzero by default.\n * This value changes when {approve} or {transferFrom} are called.", "id": 8332, "implemented": False, "kind": "function", "modifiers": [], "name": "allowance", "nodeType": "FunctionDefinition", "parameters": { "id": 8328, "nodeType": "ParameterList", "parameters": [ {  "constant": False,  "id": 8325,  "name": "owner",  "nodeType": "VariableDeclaration",  "scope": 8332,  "src": "1067:13:43",  "stateVariable": False,  "storageLocation": "default",  "typeDescriptions": {  "typeIdentifier": "t_address",  "typeString": "address"  },  "typeName": {  "id": 8324,  "name": "address",  "nodeType": "ElementaryTypeName",  "src": "1067:7:43",  "stateMutability": "nonpayable",  "typeDescriptions": {  "typeIdentifier": "t_address",  "typeString": "address"  }  },  "value": None,  "visibility": "internal" }, {  "constant": False,  "id": 8327,  "name": "spender",  "nodeType": "VariableDeclaration",  "scope": 8332,  "src": "1082:15:43",  "stateVariable": False,  "storageLocation": "default",  "typeDescriptions": {  "typeIdentifier": "t_address",  "typeString": "address"  },  "typeName": {  "id": 8326,  "name": "address",  "nodeType": "ElementaryTypeName",  "src": "1082:7:43",  "stateMutability": "nonpayable",  "typeDescriptions": {  "typeIdentifier": "t_address",  "typeString": "address"  }  },  "value": None,  "visibility": "internal" } ], "src": "1066:32:43" }, "returnParameters": { "id": 8331, "nodeType": "ParameterList", "parameters": [ {  "constant": False,  "id": 8330,  "name": "",  "nodeType": "VariableDeclaration",  "scope": 8332,  "src": "1122:7:43",  "stateVariable": False,  "storageLocation": "default",  "typeDescriptions": {  "typeIdentifier": "t_uint256",  "typeString": "uint256"  },  "typeName": {  "id": 8329,  "name": "uint256",  "nodeType": "ElementaryTypeName",  "src": "1122:7:43",  "typeDescriptions": {  "typeIdentifier": "t_uint256",  "typeString": "uint256"  }  },  "value": None,  "visibility": "internal" } ], "src": "1121:9:43" }, "scope": 8369, "src": "1048:83:43", "stateMutability": "view", "superFunction": None, "visibility": "external" }, { "body": None, "documentation": "@dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n * Returns a boolean value indicating whether the operation succeeded.\n * IMPORTANT: Beware that changing an allowance with this method brings the risk\nthat someone may use both the old and the new allowance by unfortunate\ntransaction ordering. One possible solution to mitigate this race\ncondition is to first reduce the spender's allowance to 0 and set the\ndesired value afterwards:\nhttps://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n * Emits an {Approval} event.", "id": 8341, "implemented": False, "kind": "function", "modifiers": [], "name": "approve", "nodeType": "FunctionDefinition", "parameters": { "id": 8337, "nodeType": "ParameterList", "parameters": [ {  "constant": False,  "id": 8334,  "name": "spender",  "nodeType": "VariableDeclaration",  "scope": 8341,  "src": "1801:15:43",  "stateVariable": False,  "storageLocation": "default",  "typeDescriptions": {  "typeIdentifier": "t_address",  "typeString": "address"  },  "typeName": {  "id": 8333,  "name": "address",  "nodeType": "ElementaryTypeName",  "src": "1801:7:43",  "stateMutability": "nonpayable",  "typeDescriptions": {  "typeIdentifier": "t_address",  "typeString": "address"  }  },  "value": None,  "visibility": "internal" }, {  "constant": False,  "id": 8336,  "name": "amount",  "nodeType": "VariableDeclaration",  "scope": 8341,  "src": "1818:14:43",  "stateVariable": False,  "storageLocation": "default",  "typeDescriptions": {  "typeIdentifier": "t_uint256",  "typeString": "uint256"  },  "typeName": {  "id": 8335,  "name": "uint256",  "nodeType": "ElementaryTypeName",  "src": "1818:7:43",  "typeDescriptions": {  "typeIdentifier": "t_uint256",  "typeString": "uint256"  }  },  "value": None,  "visibility": "internal" } ], "src": "1800:33:43" }, "returnParameters": { "id": 8340, "nodeType": "ParameterList", "parameters": [ {  "constant": False,  "id": 8339,  "name": "",  "nodeType": "VariableDeclaration",  "scope": 8341,  "src": "1852:4:43",  "stateVariable": False,  "storageLocation": "default",  "typeDescriptions": {  "typeIdentifier": "t_bool",  "typeString": "bool"  },  "typeName": {  "id": 8338,  "name": "bool",  "nodeType": "ElementaryTypeName",  "src": "1852:4:43",  "typeDescriptions": {  "typeIdentifier": "t_bool",  "typeString": "bool"  }  },  "value": None,  "visibility": "internal" } ], "src": "1851:6:43" }, "scope": 8369, "src": "1784:74:43", "stateMutability": "nonpayable", "superFunction": None, "visibility": "external" }, { "body": None, "documentation": "@dev Moves `amount` tokens from `sender` to `recipient` using the\nallowance mechanism. `amount` is then deducted from the caller's\nallowance.\n * Returns a boolean value indicating whether the operation succeeded.\n * Emits a {Transfer} event.", "id": 8352, "implemented": False, "kind": "function", "modifiers": [], "name": "transferFrom", "nodeType": "FunctionDefinition", "parameters": { "id": 8348, "nodeType": "ParameterList", "parameters": [ {  "constant": False,  "id": 8343,  "name": "sender",  "nodeType": "VariableDeclaration",  "scope": 8352,  "src": "2187:14:43",  "stateVariable": False,  "storageLocation": "default",  "typeDescriptions": {  "typeIdentifier": "t_address",  "typeString": "address"  },  "typeName": {  "id": 8342,  "name": "address",  "nodeType": "ElementaryTypeName",  "src": "2187:7:43",  "stateMutability": "nonpayable",  "typeDescriptions": {  "typeIdentifier": "t_address",  "typeString": "address"  }  },  "value": None,  "visibility": "internal" }, {  "constant": False,  "id": 8345,  "name": "recipient",  "nodeType": "VariableDeclaration",  "scope": 8352,  "src": "2203:17:43",  "stateVariable": False,  "storageLocation": "default",  "typeDescriptions": {  "typeIdentifier": "t_address",  "typeString": "address"  },  "typeName": {  "id": 8344,  "name": "address",  "nodeType": "ElementaryTypeName",  "src": "2203:7:43",  "stateMutability": "nonpayable",  "typeDescriptions": {  "typeIdentifier": "t_address",  "typeString": "address"  }  },  "value": None,  "visibility": "internal" }, {  "constant": False,  "id": 8347,  "name": "amount",  "nodeType": "VariableDeclaration",  "scope": 8352,  "src": "2222:14:43",  "stateVariable": False,  "storageLocation": "default",  "typeDescriptions": {  "typeIdentifier": "t_uint256",  "typeString": "uint256"  },  "typeName": {  "id": 8346,  "name": "uint256",  "nodeType": "ElementaryTypeName",  "src": "2222:7:43",  "typeDescriptions": {  "typeIdentifier": "t_uint256",  "typeString": "uint256"  }  },  "value": None,  "visibility": "internal" } ], "src": "2186:51:43" }, "returnParameters": { "id": 8351, "nodeType": "ParameterList", "parameters": [ {  "constant": False,  "id": 8350,  "name": "",  "nodeType": "VariableDeclaration",  "scope": 8352,  "src": "2256:4:43",  "stateVariable": False,  "storageLocation": "default",  "typeDescriptions": {  "typeIdentifier": "t_bool",  "typeString": "bool"  },  "typeName": {  "id": 8349,  "name": "bool",  "nodeType": "ElementaryTypeName",  "src": "2256:4:43",  "typeDescriptions": {  "typeIdentifier": "t_bool",  "typeString": "bool"  }  },  "value": None,  "visibility": "internal" } ], "src": "2255:6:43" }, "scope": 8369, "src": "2165:97:43", "stateMutability": "nonpayable", "superFunction": None, "visibility": "external" }, { "anonymous": False, "documentation": "@dev Emitted when `value` tokens are moved from one account (`from`) to\nanother (`to`).\n * Note that `value` may be zero.", "id": 8360, "name": "Transfer", "nodeType": "EventDefinition", "parameters": { "id": 8359, "nodeType": "ParameterList", "parameters": [ {  "constant": False,  "id": 8354,  "indexed": True,  "name": "from",  "nodeType": "VariableDeclaration",  "scope": 8360,  "src": "2446:20:43",  "stateVariable": False,  "storageLocation": "default",  "typeDescriptions": {  "typeIdentifier": "t_address",  "typeString": "address"  },  "typeName": {  "id": 8353,  "name": "address",  "nodeType": "ElementaryTypeName",  "src": "2446:7:43",  "stateMutability": "nonpayable",  "typeDescriptions": {  "typeIdentifier": "t_address",  "typeString": "address"  }  },  "value": None,  "visibility": "internal" }, {  "constant": False,  "id": 8356,  "indexed": True,  "name": "to",  "nodeType": "VariableDeclaration",  "scope": 8360,  "src": "2468:18:43",  "stateVariable": False,  "storageLocation": "default",  "typeDescriptions": {  "typeIdentifier": "t_address",  "typeString": "address"  },  "typeName": {  "id": 8355,  "name": "address",  "nodeType": "ElementaryTypeName",  "src": "2468:7:43",  "stateMutability": "nonpayable",  "typeDescriptions": {  "typeIdentifier": "t_address",  "typeString": "address"  }  },  "value": None,  "visibility": "internal" }, {  "constant": False,  "id": 8358,  "indexed": False,  "name": "value",  "nodeType": "VariableDeclaration",  "scope": 8360,  "src": "2488:13:43",  "stateVariable": False,  "storageLocation": "default",  "typeDescriptions": {  "typeIdentifier": "t_uint256",  "typeString": "uint256"  },  "typeName": {  "id": 8357,  "name": "uint256",  "nodeType": "ElementaryTypeName",  "src": "2488:7:43",  "typeDescriptions": {  "typeIdentifier": "t_uint256",  "typeString": "uint256"  }  },  "value": None,  "visibility": "internal" } ], "src": "2445:57:43" }, "src": "2431:72:43" }, { "anonymous": False, "documentation": "@dev Emitted when the allowance of a `spender` for an `owner` is set by\na call to {approve}. `value` is the new allowance.", "id": 8368, "name": "Approval", "nodeType": "EventDefinition", "parameters": { "id": 8367, "nodeType": "ParameterList", "parameters": [ {  "constant": False,  "id": 8362,  "indexed": True,  "name": "owner",  "nodeType": "VariableDeclaration",  "scope": 8368,  "src": "2677:21:43",  "stateVariable": False,  "storageLocation": "default",  "typeDescriptions": {  "typeIdentifier": "t_address",  "typeString": "address"  },  "typeName": {  "id": 8361,  "name": "address",  "nodeType": "ElementaryTypeName",  "src": "2677:7:43",  "stateMutability": "nonpayable",  "typeDescriptions": {  "typeIdentifier": "t_address",  "typeString": "address"  }  },  "value": None,  "visibility": "internal" }, {  "constant": False,  "id": 8364,  "indexed": True,  "name": "spender",  "nodeType": "VariableDeclaration",  "scope": 8368,  "src": "2700:23:43",  "stateVariable": False,  "storageLocation": "default",  "typeDescriptions": {  "typeIdentifier": "t_address",  "typeString": "address"  },  "typeName": {  "id": 8363,  "name": "address",  "nodeType": "ElementaryTypeName",  "src": "2700:7:43",  "stateMutability": "nonpayable",  "typeDescriptions": {  "typeIdentifier": "t_address",  "typeString": "address"  }  },  "value": None,  "visibility": "internal" }, {  "constant": False,  "id": 8366,  "indexed": False,  "name": "value",  "nodeType": "VariableDeclaration",  "scope": 8368,  "src": "2725:13:43",  "stateVariable": False,  "storageLocation": "default",  "typeDescriptions": {  "typeIdentifier": "t_uint256",  "typeString": "uint256"  },  "typeName": {  "id": 8365,  "name": "uint256",  "nodeType": "ElementaryTypeName",  "src": "2725:7:43",  "typeDescriptions": {  "typeIdentifier": "t_uint256",  "typeString": "uint256"  }  },  "value": None,  "visibility": "internal" } ], "src": "2676:63:43" }, "src": "2662:78:43" } ], "scope": 8370, "src": "176:2566:43" } ], "src": "0:2743:43" }, "legacyAST": { "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol", "exportedSymbols": { "IERC20": [ 8369 ] }, "id": 8370, "nodeType": "SourceUnit", "nodes": [ { "id": 8302, "literals": [ "solidity", "^", "0.5", ".0" ], "nodeType": "PragmaDirective", "src": "0:23:43" }, { "baseContracts": [], "contractDependencies": [], "contractKind": "interface", "documentation": "@dev Interface of the ERC20 standard as defined in the EIP. Does not include\nthe optional functions; to access them see {ERC20Detailed}.", "fullyImplemented": False, "id": 8369, "linearizedBaseContracts": [ 8369 ], "name": "IERC20", "nodeType": "ContractDefinition", "nodes": [ { "body": None, "documentation": "@dev Returns the amount of tokens in existence.", "id": 8307, "implemented": False, "kind": "function", "modifiers": [], "name": "totalSupply", "nodeType": "FunctionDefinition", "parameters": { "id": 8303, "nodeType": "ParameterList", "parameters": [], "src": "290:2:43" }, "returnParameters": { "id": 8306, "nodeType": "ParameterList", "parameters": [ {  "constant": False,  "id": 8305,  "name": "",  "nodeType": "VariableDeclaration",  "scope": 8307,  "src": "316:7:43",  "stateVariable": False,  "storageLocation": "default",  "typeDescriptions": {  "typeIdentifier": "t_uint256",  "typeString": "uint256"  },  "typeName": {  "id": 8304,  "name": "uint256",  "nodeType": "ElementaryTypeName",  "src": "316:7:43",  "typeDescriptions": {  "typeIdentifier": "t_uint256",  "typeString": "uint256"  }  },  "value": None,  "visibility": "internal" } ], "src": "315:9:43" }, "scope": 8369, "src": "270:55:43", "stateMutability": "view", "superFunction": None, "visibility": "external" }, { "body": None, "documentation": "@dev Returns the amount of tokens owned by `account`.", "id": 8314, "implemented": False, "kind": "function", "modifiers": [], "name": "balanceOf", "nodeType": "FunctionDefinition", "parameters": { "id": 8310, "nodeType": "ParameterList", "parameters": [ {  "constant": False,  "id": 8309,  "name": "account",  "nodeType": "VariableDeclaration",  "scope": 8314,  "src": "427:15:43",  "stateVariable": False,  "storageLocation": "default",  "typeDescriptions": {  "typeIdentifier": "t_address",  "typeString": "address"  },  "typeName": {  "id": 8308,  "name": "address",  "nodeType": "ElementaryTypeName",  "src": "427:7:43",  "stateMutability": "nonpayable",  "typeDescriptions": {  "typeIdentifier": "t_address",  "typeString": "address"  }  },  "value": None,  "visibility": "internal" } ], "src": "426:17:43" }, "returnParameters": { "id": 8313, "nodeType": "ParameterList", "parameters": [ {  "constant": False,  "id": 8312,  "name": "",  "nodeType": "VariableDeclaration",  "scope": 8314,  "src": "467:7:43",  "stateVariable": False,  "storageLocation": "default",  "typeDescriptions": {  "typeIdentifier": "t_uint256",  "typeString": "uint256"  },  "typeName": {  "id": 8311,  "name": "uint256",  "nodeType": "ElementaryTypeName",  "src": "467:7:43",  "typeDescriptions": {  "typeIdentifier": "t_uint256",  "typeString": "uint256"  }  },  "value": None,  "visibility": "internal" } ], "src": "466:9:43" }, "scope": 8369, "src": "408:68:43", "stateMutability": "view", "superFunction": 3659, "visibility": "external" }, { "body": None, "documentation": "@dev Moves `amount` tokens from the caller's account to `recipient`.\n * Returns a boolean value indicating whether the operation succeeded.\n * Emits a {Transfer} event.", "id": 8323, "implemented": False, "kind": "function", "modifiers": [], "name": "transfer", "nodeType": "FunctionDefinition", "parameters": { "id": 8319, "nodeType": "ParameterList", "parameters": [ {  "constant": False,  "id": 8316,  "name": "recipient",  "nodeType": "VariableDeclaration",  "scope": 8323,  "src": "714:17:43",  "stateVariable": False,  "storageLocation": "default",  "typeDescriptions": {  "typeIdentifier": "t_address",  "typeString": "address"  },  "typeName": {  "id": 8315,  "name": "address",  "nodeType": "ElementaryTypeName",  "src": "714:7:43",  "stateMutability": "nonpayable",  "typeDescriptions": {  "typeIdentifier": "t_address",  "typeString": "address"  }  },  "value": None,  "visibility": "internal" }, {  "constant": False,  "id": 8318,  "name": "amount",  "nodeType": "VariableDeclaration",  "scope": 8323,  "src": "733:14:43",  "stateVariable": False,  "storageLocation": "default",  "typeDescriptions": {  "typeIdentifier": "t_uint256",  "typeString": "uint256"  },  "typeName": {  "id": 8317,  "name": "uint256",  "nodeType": "ElementaryTypeName",  "src": "733:7:43",  "typeDescriptions": {  "typeIdentifier": "t_uint256",  "typeString": "uint256"  }  },  "value": None,  "visibility": "internal" } ], "src": "713:35:43" }, "returnParameters": { "id": 8322, "nodeType": "ParameterList", "parameters": [ {  "constant": False,  "id": 8321,  "name": "",  "nodeType": "VariableDeclaration",  "scope": 8323,  "src": "767:4:43",  "stateVariable": False,  "storageLocation": "default",  "typeDescriptions": {  "typeIdentifier": "t_bool",  "typeString": "bool"  },  "typeName": {  "id": 8320,  "name": "bool",  "nodeType": "ElementaryTypeName",  "src": "767:4:43",  "typeDescriptions": {  "typeIdentifier": "t_bool",  "typeString": "bool"  }  },  "value": None,  "visibility": "internal" } ], "src": "766:6:43" }, "scope": 8369, "src": "696:77:43", "stateMutability": "nonpayable", "superFunction": None, "visibility": "external" }, { "body": None, "documentation": "@dev Returns the remaining number of tokens that `spender` will be\nallowed to spend on behalf of `owner` through {transferFrom}. This is\nzero by default.\n * This value changes when {approve} or {transferFrom} are called.", "id": 8332, "implemented": False, "kind": "function", "modifiers": [], "name": "allowance", "nodeType": "FunctionDefinition", "parameters": { "id": 8328, "nodeType": "ParameterList", "parameters": [ {  "constant": False,  "id": 8325,  "name": "owner",  "nodeType": "VariableDeclaration",  "scope": 8332,  "src": "1067:13:43",  "stateVariable": False,  "storageLocation": "default",  "typeDescriptions": {  "typeIdentifier": "t_address",  "typeString": "address"  },  "typeName": {  "id": 8324,  "name": "address",  "nodeType": "ElementaryTypeName",  "src": "1067:7:43",  "stateMutability": "nonpayable",  "typeDescriptions": {  "typeIdentifier": "t_address",  "typeString": "address"  }  },  "value": None,  "visibility": "internal" }, {  "constant": False,  "id": 8327,  "name": "spender",  "nodeType": "VariableDeclaration",  "scope": 8332,  "src": "1082:15:43",  "stateVariable": False,  "storageLocation": "default",  "typeDescriptions": {  "typeIdentifier": "t_address",  "typeString": "address"  },  "typeName": {  "id": 8326,  "name": "address",  "nodeType": "ElementaryTypeName",  "src": "1082:7:43",  "stateMutability": "nonpayable",  "typeDescriptions": {  "typeIdentifier": "t_address",  "typeString": "address"  }  },  "value": None,  "visibility": "internal" } ], "src": "1066:32:43" }, "returnParameters": { "id": 8331, "nodeType": "ParameterList", "parameters": [ {  "constant": False,  "id": 8330,  "name": "",  "nodeType": "VariableDeclaration",  "scope": 8332,  "src": "1122:7:43",  "stateVariable": False,  "storageLocation": "default",  "typeDescriptions": {  "typeIdentifier": "t_uint256",  "typeString": "uint256"  },  "typeName": {  "id": 8329,  "name": "uint256",  "nodeType": "ElementaryTypeName",  "src": "1122:7:43",  "typeDescriptions": {  "typeIdentifier": "t_uint256",  "typeString": "uint256"  }  },  "value": None,  "visibility": "internal" } ], "src": "1121:9:43" }, "scope": 8369, "src": "1048:83:43", "stateMutability": "view", "superFunction": None, "visibility": "external" }, { "body": None, "documentation": "@dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n * Returns a boolean value indicating whether the operation succeeded.\n * IMPORTANT: Beware that changing an allowance with this method brings the risk\nthat someone may use both the old and the new allowance by unfortunate\ntransaction ordering. One possible solution to mitigate this race\ncondition is to first reduce the spender's allowance to 0 and set the\ndesired value afterwards:\nhttps://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n * Emits an {Approval} event.", "id": 8341, "implemented": False, "kind": "function", "modifiers": [], "name": "approve", "nodeType": "FunctionDefinition", "parameters": { "id": 8337, "nodeType": "ParameterList", "parameters": [ {  "constant": False,  "id": 8334,  "name": "spender",  "nodeType": "VariableDeclaration",  "scope": 8341,  "src": "1801:15:43",  "stateVariable": False,  "storageLocation": "default",  "typeDescriptions": {  "typeIdentifier": "t_address",  "typeString": "address"  },  "typeName": {  "id": 8333,  "name": "address",  "nodeType": "ElementaryTypeName",  "src": "1801:7:43",  "stateMutability": "nonpayable",  "typeDescriptions": {  "typeIdentifier": "t_address",  "typeString": "address"  }  },  "value": None,  "visibility": "internal" }, {  "constant": False,  "id": 8336,  "name": "amount",  "nodeType": "VariableDeclaration",  "scope": 8341,  "src": "1818:14:43",  "stateVariable": False,  "storageLocation": "default",  "typeDescriptions": {  "typeIdentifier": "t_uint256",  "typeString": "uint256"  },  "typeName": {  "id": 8335,  "name": "uint256",  "nodeType": "ElementaryTypeName",  "src": "1818:7:43",  "typeDescriptions": {  "typeIdentifier": "t_uint256",  "typeString": "uint256"  }  },  "value": None,  "visibility": "internal" } ], "src": "1800:33:43" }, "returnParameters": { "id": 8340, "nodeType": "ParameterList", "parameters": [ {  "constant": False,  "id": 8339,  "name": "",  "nodeType": "VariableDeclaration",  "scope": 8341,  "src": "1852:4:43",  "stateVariable": False,  "storageLocation": "default",  "typeDescriptions": {  "typeIdentifier": "t_bool",  "typeString": "bool"  },  "typeName": {  "id": 8338,  "name": "bool",  "nodeType": "ElementaryTypeName",  "src": "1852:4:43",  "typeDescriptions": {  "typeIdentifier": "t_bool",  "typeString": "bool"  }  },  "value": None,  "visibility": "internal" } ], "src": "1851:6:43" }, "scope": 8369, "src": "1784:74:43", "stateMutability": "nonpayable", "superFunction": None, "visibility": "external" }, { "body": None, "documentation": "@dev Moves `amount` tokens from `sender` to `recipient` using the\nallowance mechanism. `amount` is then deducted from the caller's\nallowance.\n * Returns a boolean value indicating whether the operation succeeded.\n * Emits a {Transfer} event.", "id": 8352, "implemented": False, "kind": "function", "modifiers": [], "name": "transferFrom", "nodeType": "FunctionDefinition", "parameters": { "id": 8348, "nodeType": "ParameterList", "parameters": [ {  "constant": False,  "id": 8343,  "name": "sender",  "nodeType": "VariableDeclaration",  "scope": 8352,  "src": "2187:14:43",  "stateVariable": False,  "storageLocation": "default",  "typeDescriptions": {  "typeIdentifier": "t_address",  "typeString": "address"  },  "typeName": {  "id": 8342,  "name": "address",  "nodeType": "ElementaryTypeName",  "src": "2187:7:43",  "stateMutability": "nonpayable",  "typeDescriptions": {  "typeIdentifier": "t_address",  "typeString": "address"  }  },  "value": None,  "visibility": "internal" }, {  "constant": False,  "id": 8345,  "name": "recipient",  "nodeType": "VariableDeclaration",  "scope": 8352,  "src": "2203:17:43",  "stateVariable": False,  "storageLocation": "default",  "typeDescriptions": {  "typeIdentifier": "t_address",  "typeString": "address"  },  "typeName": {  "id": 8344,  "name": "address",  "nodeType": "ElementaryTypeName",  "src": "2203:7:43",  "stateMutability": "nonpayable",  "typeDescriptions": {  "typeIdentifier": "t_address",  "typeString": "address"  }  },  "value": None,  "visibility": "internal" }, {  "constant": False,  "id": 8347,  "name": "amount",  "nodeType": "VariableDeclaration",  "scope": 8352,  "src": "2222:14:43",  "stateVariable": False,  "storageLocation": "default",  "typeDescriptions": {  "typeIdentifier": "t_uint256",  "typeString": "uint256"  },  "typeName": {  "id": 8346,  "name": "uint256",  "nodeType": "ElementaryTypeName",  "src": "2222:7:43",  "typeDescriptions": {  "typeIdentifier": "t_uint256",  "typeString": "uint256"  }  },  "value": None,  "visibility": "internal" } ], "src": "2186:51:43" }, "returnParameters": { "id": 8351, "nodeType": "ParameterList", "parameters": [ {  "constant": False,  "id": 8350,  "name": "",  "nodeType": "VariableDeclaration",  "scope": 8352,  "src": "2256:4:43",  "stateVariable": False,  "storageLocation": "default",  "typeDescriptions": {  "typeIdentifier": "t_bool",  "typeString": "bool"  },  "typeName": {  "id": 8349,  "name": "bool",  "nodeType": "ElementaryTypeName",  "src": "2256:4:43",  "typeDescriptions": {  "typeIdentifier": "t_bool",  "typeString": "bool"  }  },  "value": None,  "visibility": "internal" } ], "src": "2255:6:43" }, "scope": 8369, "src": "2165:97:43", "stateMutability": "nonpayable", "superFunction": None, "visibility": "external" }, { "anonymous": False, "documentation": "@dev Emitted when `value` tokens are moved from one account (`from`) to\nanother (`to`).\n * Note that `value` may be zero.", "id": 8360, "name": "Transfer", "nodeType": "EventDefinition", "parameters": { "id": 8359, "nodeType": "ParameterList", "parameters": [ {  "constant": False,  "id": 8354,  "indexed": True,  "name": "from",  "nodeType": "VariableDeclaration",  "scope": 8360,  "src": "2446:20:43",  "stateVariable": False,  "storageLocation": "default",  "typeDescriptions": {  "typeIdentifier": "t_address",  "typeString": "address"  },  "typeName": {  "id": 8353,  "name": "address",  "nodeType": "ElementaryTypeName",  "src": "2446:7:43",  "stateMutability": "nonpayable",  "typeDescriptions": {  "typeIdentifier": "t_address",  "typeString": "address"  }  },  "value": None,  "visibility": "internal" }, {  "constant": False,  "id": 8356,  "indexed": True,  "name": "to",  "nodeType": "VariableDeclaration",  "scope": 8360,  "src": "2468:18:43",  "stateVariable": False,  "storageLocation": "default",  "typeDescriptions": {  "typeIdentifier": "t_address",  "typeString": "address"  },  "typeName": {  "id": 8355,  "name": "address",  "nodeType": "ElementaryTypeName",  "src": "2468:7:43",  "stateMutability": "nonpayable",  "typeDescriptions": {  "typeIdentifier": "t_address",  "typeString": "address"  }  },  "value": None,  "visibility": "internal" }, {  "constant": False,  "id": 8358,  "indexed": False,  "name": "value",  "nodeType": "VariableDeclaration",  "scope": 8360,  "src": "2488:13:43",  "stateVariable": False,  "storageLocation": "default",  "typeDescriptions": {  "typeIdentifier": "t_uint256",  "typeString": "uint256"  },  "typeName": {  "id": 8357,  "name": "uint256",  "nodeType": "ElementaryTypeName",  "src": "2488:7:43",  "typeDescriptions": {  "typeIdentifier": "t_uint256",  "typeString": "uint256"  }  },  "value": None,  "visibility": "internal" } ], "src": "2445:57:43" }, "src": "2431:72:43" }, { "anonymous": False, "documentation": "@dev Emitted when the allowance of a `spender` for an `owner` is set by\na call to {approve}. `value` is the new allowance.", "id": 8368, "name": "Approval", "nodeType": "EventDefinition", "parameters": { "id": 8367, "nodeType": "ParameterList", "parameters": [ {  "constant": False,  "id": 8362,  "indexed": True,  "name": "owner",  "nodeType": "VariableDeclaration",  "scope": 8368,  "src": "2677:21:43",  "stateVariable": False,  "storageLocation": "default",  "typeDescriptions": {  "typeIdentifier": "t_address",  "typeString": "address"  },  "typeName": {  "id": 8361,  "name": "address",  "nodeType": "ElementaryTypeName",  "src": "2677:7:43",  "stateMutability": "nonpayable",  "typeDescriptions": {  "typeIdentifier": "t_address",  "typeString": "address"  }  },  "value": None,  "visibility": "internal" }, {  "constant": False,  "id": 8364,  "indexed": True,  "name": "spender",  "nodeType": "VariableDeclaration",  "scope": 8368,  "src": "2700:23:43",  "stateVariable": False,  "storageLocation": "default",  "typeDescriptions": {  "typeIdentifier": "t_address",  "typeString": "address"  },  "typeName": {  "id": 8363,  "name": "address",  "nodeType": "ElementaryTypeName",  "src": "2700:7:43",  "stateMutability": "nonpayable",  "typeDescriptions": {  "typeIdentifier": "t_address",  "typeString": "address"  }  },  "value": None,  "visibility": "internal" }, {  "constant": False,  "id": 8366,  "indexed": False,  "name": "value",  "nodeType": "VariableDeclaration",  "scope": 8368,  "src": "2725:13:43",  "stateVariable": False,  "storageLocation": "default",  "typeDescriptions": {  "typeIdentifier": "t_uint256",  "typeString": "uint256"  },  "typeName": {  "id": 8365,  "name": "uint256",  "nodeType": "ElementaryTypeName",  "src": "2725:7:43",  "typeDescriptions": {  "typeIdentifier": "t_uint256",  "typeString": "uint256"  }  },  "value": None,  "visibility": "internal" } ], "src": "2676:63:43" }, "src": "2662:78:43" } ], "scope": 8370, "src": "176:2566:43" } ], "src": "0:2743:43" }, "compiler": { "name": "solc", "version": "0.5.11+commit.c082d0b4.Emscripten.clang" }, "networks": {}, "schemaVersion": "3.2.4", "updatedAt": "2020-09-11T03:20:09.041Z", "devdoc": { "details": "Interface of the ERC20 standard as defined in the EIP. Does not include the optional functions; to access them see {ERC20Detailed}.", "methods": { "allowance(address,address)": { "details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. * This value changes when {approve} or {transferFrom} are called." }, "approve(address,uint256)": { "details": "Sets `amount` as the allowance of `spender` over the caller's tokens. * Returns a boolean value indicating whether the operation succeeded. * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 * Emits an {Approval} event." }, "balanceOf(address)": { "details": "Returns the amount of tokens owned by `account`." }, "totalSupply()": { "details": "Returns the amount of tokens in existence." }, "transfer(address,uint256)": { "details": "Moves `amount` tokens from the caller's account to `recipient`. * Returns a boolean value indicating whether the operation succeeded. * Emits a {Transfer} event." }, "transferFrom(address,address,uint256)": { "details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. * Returns a boolean value indicating whether the operation succeeded. * Emits a {Transfer} event." } } }, "userdoc": { "methods": {} }}
ERC20_ABI = ERC20_DEF["abi"]
IERC20_ABI = json.load(
    ME.parent.joinpath('metadata/IERC20.json').open()
).get('abi')
# Overall error tolerance for credits to token value calculations
MAX_ERROR = 5e6


def parse_args(argv):
    parser = ArgumentParser()
    parser.add_argument('-b', '--block', dest='block', default="latest",
                        help='Block number to query for (default: latest)')
    parser.add_argument('-c', '--credits-per-token', dest='credits_per_token',
                        help='Credits per token override to calculate OUSD balances')
    parser.add_argument('-u', '--url', dest='endpoint', type=str,
                        default="http://localhost:8545",
                        help='JSON-RPC endpoint to query')
    return parser.parse_args(argv)


def get_balance(token, block_number, address):
    address = Web3.toChecksumAddress(address)
    bal = token.functions.balanceOf(address).call(
        block_identifier=int(block_number, 16)
    )
    return bal


def is_contract(web3, address):
    code = web3.eth.getCode(address)
    return code.hex() != '0x'


def to_hex_num(n):
    if n.startswith('0x'):
        return n
    if type(n) == str:
        n = int(n)
    return hex(n)


def ousd_value_adjustment(token_balance, from_cpt, to_cpt):
    token_balance = Decimal(token_balance)
    from_cpt = Decimal(from_cpt)
    to_cpt = Decimal(to_cpt)
    credits = floor(token_balance * from_cpt / Decimal(1e18))
    return floor(credits * Decimal(1e18) / to_cpt)


def main():
    args = parse_args(sys.argv[1:])
    web3 = Web3(Web3.HTTPProvider(args.endpoint))
    token = web3.eth.contract(address=ERC20_ADDRESS, abi=IERC20_ABI)

    block_number = args.block
    if args.block != 'latest':
        block_number = to_hex_num(args.block)

    total_supply = token.functions.totalSupply().call(
        block_identifier=int(block_number, 16)
    )
    current_cpt = int(token.functions.rebasingCreditsPerToken().call(
        block_identifier=int(block_number, 16)
    ), 16)

    to_cpt = None
    if args.credits_per_token:
        to_cpt = int(args.credits_per_token)
        total_supply = ousd_value_adjustment(total_supply, current_cpt, to_cpt)

    # One address per line
    running_balance = 0
    for addr in sys.stdin:
        addr = addr.strip()

        if not addr:
            break

        if addr == ZERO_ADDRESS:
            continue

        addr = Web3.toChecksumAddress(addr)
        bal = get_balance(token, block_number, addr)
        contract = is_contract(web3, addr)

        # Adjust the OUSD balance
        if args.credits_per_token:
            bal = ousd_value_adjustment(bal, current_cpt, to_cpt)

        running_balance += bal

        print('{},{},{}'.format(
            addr,
            bal,
            'true' if contract else 'false'
        ))

    # The error variation is from very small balanceOf value calculations that
    # have added up over time.  And also if we're doing CPT value adjustments
    # here in this script.  Tests have shown this to be like 4x10^-10 of a cent
    # or better.
    if abs(running_balance - total_supply) > MAX_ERROR:
        print('Balance checks failed: {} != {}'.format(
            running_balance,
            total_supply
        ), file=sys.stderr)
        sys.exit(1)


if __name__ == "__main__":
    main()
